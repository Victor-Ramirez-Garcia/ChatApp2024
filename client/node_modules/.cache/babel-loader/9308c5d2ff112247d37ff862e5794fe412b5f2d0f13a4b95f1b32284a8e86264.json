{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vramirez3678\\\\Documents\\\\Portland State University\\\\Winter Term 2024\\\\CS314\\\\Term Project\\\\ChatApp2024\\\\client\\\\src\\\\views\\\\main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport ChatButtonComponent from '../components/ChatButtonComponent';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Main(props) {\n  _s();\n  const {\n    user\n  } = props; // Properties given by the component\n  const navigate = useNavigate(); // Function that navigates to different routes\n  const [chats, setChats] = useState([]); // All user chats (excluding current user)\n  const [userChats, setUserChats] = useState([]); // All current user chats\n\n  // Empty user handler\n  useEffect(() => {\n    if (Object.keys(user).length === 0) navigate(\"/\");\n  }, [user, navigate]);\n\n  // Get all non-user chats\n  const getNonUserChats = useCallback(async () => {\n    const res = await axios.get(`http://localhost:8000/api/chats/all/exclude/${user._id}`);\n\n    // Replaces user id with user object\n    const resChats = Object.keys(res.data.chats).map(key => axios.get(`http://localhost:8000/api/users/${res.data.chats[key].user}`).then(res_user => {\n      // When we console log res_user, data.user is an array,\n      // in here, we only want the object\n      res.data.chats[key].user = res_user.data.user[0];\n      return res.data.chats[key];\n    }));\n    const chatsArr = await Promise.all(resChats);\n    setChats(chatsArr);\n  }, [user._id, setChats]);\n\n  // Ensures effect re-runs only when the function changes\n  useEffect(() => {\n    getNonUserChats();\n  }, [getNonUserChats]);\n\n  // Get all user chats\n  const getUserChats = useCallback(async () => {\n    const res = await axios.get(`http://localhost:8000/api/chats/${user._id}`);\n\n    // Replaces user id with user object\n    const resChats = Object.keys(res.data.chats).map(key => {\n      res.data.chats[key].user = user;\n      return res.data.chats[key];\n    });\n    const chatsArr = await Promise.all(resChats);\n    setUserChats(chatsArr);\n  }, [user, setUserChats]);\n\n  // Ensures effect re-runs only when the function changes\n  useEffect(() => {\n    getUserChats();\n  }, [getUserChats]);\n\n  // Logout Handler\n  const onClickHandler = e => {\n    e.preventDefault();\n    axios.get(\"http://localhost:8000/api/users/logout\").then(() => {\n      navigate(\"/\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  // Delete Chat Handler\n  const onDeleteChatHandler = (e, chat) => {\n    e.preventDefault();\n    axios.delete(`http://localhost:8000/api/chats/delete/${chat}`).then(() => {\n      getUserChats();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  // Join Chat Handler\n  const onJoinChatHandler = (e, chat) => {\n    e.preventDefault();\n    navigate(\"/main/chat\", {\n      state: {\n        chat: chat._id,\n        user: chat.user._id\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome \", user.firstName, \" \", user.lastName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        navigate(\"/main/update\");\n      },\n      children: \"Update Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Chat Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), userChats.map((userChat, key) => /*#__PURE__*/_jsxDEV(ChatButtonComponent, {\n      chat: userChat,\n      onJoinChatHandler: onJoinChatHandler,\n      onDeleteChatHandler: onDeleteChatHandler,\n      isUser: true\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 47\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Online Chat Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), chats.map((userChat, key) => /*#__PURE__*/_jsxDEV(ChatButtonComponent, {\n      chat: userChat,\n      onJoinChatHandler: onJoinChatHandler,\n      isUser: false\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 43\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        navigate(\"/main/create\");\n      },\n      children: \"Create Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => onClickHandler(e),\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Main, \"7jCe6QcLUm7soGEEmAbCa7HsIXg=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","useNavigate","ChatButtonComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","props","_s","user","navigate","chats","setChats","userChats","setUserChats","Object","keys","length","getNonUserChats","res","get","_id","resChats","data","map","key","then","res_user","chatsArr","Promise","all","getUserChats","onClickHandler","e","preventDefault","catch","err","console","log","onDeleteChatHandler","chat","delete","onJoinChatHandler","state","children","firstName","lastName","fileName","_jsxFileName","lineNumber","columnNumber","onClick","userChat","isUser","_c","$RefreshReg$"],"sources":["C:/Users/vramirez3678/Documents/Portland State University/Winter Term 2024/CS314/Term Project/ChatApp2024/client/src/views/main.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ChatButtonComponent from '../components/ChatButtonComponent';\r\n\r\nexport function Main(props) {\r\n    const { user } = props; // Properties given by the component\r\n    const navigate = useNavigate(); // Function that navigates to different routes\r\n    const [chats, setChats] = useState([]); // All user chats (excluding current user)\r\n    const [userChats, setUserChats] = useState([]); // All current user chats\r\n\r\n    // Empty user handler\r\n    useEffect(() => {\r\n        if (Object.keys(user).length === 0)\r\n            navigate(\"/\");\r\n    }, [user, navigate]);\r\n\r\n    // Get all non-user chats\r\n    const getNonUserChats = useCallback(async() => {\r\n        const res = await axios.get(`http://localhost:8000/api/chats/all/exclude/${user._id}`);\r\n\r\n        // Replaces user id with user object\r\n        const resChats = Object.keys(res.data.chats).map((key) => \r\n            axios.get(`http://localhost:8000/api/users/${res.data.chats[key].user}`)\r\n            .then((res_user) => {\r\n                // When we console log res_user, data.user is an array,\r\n                // in here, we only want the object\r\n                res.data.chats[key].user = res_user.data.user[0];\r\n                return res.data.chats[key];\r\n            })\r\n        );\r\n\r\n        const chatsArr = await Promise.all(resChats);\r\n        setChats(chatsArr);\r\n    }, [user._id, setChats]);\r\n\r\n    // Ensures effect re-runs only when the function changes\r\n    useEffect(() => {getNonUserChats();}, [getNonUserChats]);\r\n\r\n    // Get all user chats\r\n    const getUserChats = useCallback(async() => {\r\n        const res = await axios.get(`http://localhost:8000/api/chats/${user._id}`);\r\n\r\n        // Replaces user id with user object\r\n        const resChats = Object.keys(res.data.chats).map((key) => {\r\n            res.data.chats[key].user = user;\r\n            return res.data.chats[key];\r\n        });\r\n\r\n        const chatsArr = await Promise.all(resChats);\r\n        setUserChats(chatsArr);\r\n    }, [user, setUserChats]);\r\n\r\n    // Ensures effect re-runs only when the function changes\r\n    useEffect(() => {getUserChats();}, [getUserChats]);\r\n\r\n    // Logout Handler\r\n    const onClickHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        axios.get(\"http://localhost:8000/api/users/logout\")\r\n        .then(() => {\r\n            navigate(\"/\");\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    // Delete Chat Handler\r\n    const onDeleteChatHandler = (e, chat) => {\r\n        e.preventDefault();\r\n\r\n        axios.delete(`http://localhost:8000/api/chats/delete/${chat}`)\r\n        .then(() => {getUserChats();})\r\n        .catch(err => {console.log(err)});\r\n    }\r\n\r\n    // Join Chat Handler\r\n    const onJoinChatHandler = (e, chat) => {\r\n        e.preventDefault();\r\n\r\n        navigate(\"/main/chat\", { state: { chat: chat._id, user: chat.user._id } });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Welcome {user.firstName} {user.lastName}!</h1>\r\n            <button onClick={() => {navigate(\"/main/update\")}}>Update Profile</button>\r\n            <h2>Your Chat Rooms</h2>\r\n            {userChats.map((userChat, key) => <ChatButtonComponent key={key} chat={userChat} onJoinChatHandler={onJoinChatHandler} onDeleteChatHandler={onDeleteChatHandler} isUser={true} />)}\r\n            <h2>Online Chat Rooms</h2>\r\n            {chats.map((userChat, key) => <ChatButtonComponent key={key} chat={userChat} onJoinChatHandler={onJoinChatHandler} isUser={false} />)}\r\n\r\n            <button onClick={() => {navigate(\"/main/create\")}}>Create Chat</button>\r\n            <button onClick={e => onClickHandler(e)}>Logout</button>\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}