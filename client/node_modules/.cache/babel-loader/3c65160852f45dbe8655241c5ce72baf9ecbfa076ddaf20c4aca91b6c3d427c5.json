{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vramirez3678\\\\Documents\\\\Portland State University\\\\Winter Term 2024\\\\CS314\\\\Term Project\\\\ChatApp2024\\\\client\\\\src\\\\views\\\\update.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport UpdateComponent from '../components/UpdateComponent';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Update(props) {\n  _s();\n  const {\n    user,\n    setUser\n  } = props; // Properties given by component\n  const navigate = useNavigate(); // Function that navigates to different routes\n  const [errors, setErrors] = useState([]);\n  const onSubmitHandler = (e, formInfo) => {\n    e.preventDefault();\n    formInfo.user = user._id; // Add user id to form info\n\n    axios.post(\"http://localhost:8000/api/users/update\", formInfo).then(post_res => {\n      setUser(post_res.data.user);\n      navigate(\"/main\");\n    }).catch(err => {\n      const errorArr = [];\n      if (err.response.data.firstNameEmpty) errorArr.push([\"firstName\", \"This field is empty\"]);\n      if (err.response.data.lastNameEmpty) errorArr.push([\"lastName\", \"This field is empty\"]);\n      setErrors(errorArr); // Store the errors\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UpdateComponent, {\n      onSubmitHandler: onSubmitHandler,\n      onClickHandler: () => {\n        navigate(\"/main\");\n      },\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Update, \"nvB24QwDdYtCe1GzvW57cGjM9Yo=\", false, function () {\n  return [useNavigate];\n});\n_c = Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useState","axios","useNavigate","UpdateComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","Update","props","_s","user","setUser","navigate","errors","setErrors","onSubmitHandler","e","formInfo","preventDefault","_id","post","then","post_res","data","catch","err","errorArr","response","firstNameEmpty","push","lastNameEmpty","children","fileName","_jsxFileName","lineNumber","columnNumber","onClickHandler","_c","$RefreshReg$"],"sources":["C:/Users/vramirez3678/Documents/Portland State University/Winter Term 2024/CS314/Term Project/ChatApp2024/client/src/views/update.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport UpdateComponent from '../components/UpdateComponent';\r\n\r\nexport function Update(props) {\r\n    const { user, setUser } = props; // Properties given by component\r\n    const navigate = useNavigate(); // Function that navigates to different routes\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    const onSubmitHandler = (e, formInfo) => {\r\n        e.preventDefault();\r\n\r\n        formInfo.user = user._id; // Add user id to form info\r\n\r\n        axios.post(\"http://localhost:8000/api/users/update\", formInfo)\r\n        .then((post_res) => {\r\n            setUser(post_res.data.user);\r\n            navigate(\"/main\");\r\n        })\r\n        .catch(err => {\r\n            const errorArr = [];\r\n\r\n            if (err.response.data.firstNameEmpty)\r\n                errorArr.push([\"firstName\", \"This field is empty\"]);\r\n\r\n            if (err.response.data.lastNameEmpty)\r\n                errorArr.push([\"lastName\", \"This field is empty\"]);\r\n\r\n            setErrors(errorArr); // Store the errors\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Update Profile</h1>\r\n            <UpdateComponent onSubmitHandler={onSubmitHandler} onClickHandler={() => {navigate(\"/main\")}} errors={errors} />\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,eAAe,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5D,OAAO,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1B,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGH,KAAK,CAAC,CAAC;EACjC,MAAMI,QAAQ,GAAGX,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMgB,eAAe,GAAGA,CAACC,CAAC,EAAEC,QAAQ,KAAK;IACrCD,CAAC,CAACE,cAAc,CAAC,CAAC;IAElBD,QAAQ,CAACP,IAAI,GAAGA,IAAI,CAACS,GAAG,CAAC,CAAC;;IAE1BnB,KAAK,CAACoB,IAAI,CAAC,wCAAwC,EAAEH,QAAQ,CAAC,CAC7DI,IAAI,CAAEC,QAAQ,IAAK;MAChBX,OAAO,CAACW,QAAQ,CAACC,IAAI,CAACb,IAAI,CAAC;MAC3BE,QAAQ,CAAC,OAAO,CAAC;IACrB,CAAC,CAAC,CACDY,KAAK,CAACC,GAAG,IAAI;MACV,MAAMC,QAAQ,GAAG,EAAE;MAEnB,IAAID,GAAG,CAACE,QAAQ,CAACJ,IAAI,CAACK,cAAc,EAChCF,QAAQ,CAACG,IAAI,CAAC,CAAC,WAAW,EAAE,qBAAqB,CAAC,CAAC;MAEvD,IAAIJ,GAAG,CAACE,QAAQ,CAACJ,IAAI,CAACO,aAAa,EAC/BJ,QAAQ,CAACG,IAAI,CAAC,CAAC,UAAU,EAAE,qBAAqB,CAAC,CAAC;MAEtDf,SAAS,CAACY,QAAQ,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC;EACN,CAAC;EAED,oBACItB,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACI3B,OAAA;MAAA2B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB/B,OAAA,CAACF,eAAe;MAACa,eAAe,EAAEA,eAAgB;MAACqB,cAAc,EAAEA,CAAA,KAAM;QAACxB,QAAQ,CAAC,OAAO,CAAC;MAAA,CAAE;MAACC,MAAM,EAAEA;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAClH,CAAC;AAEX;AAAC1B,EAAA,CAlCeF,MAAM;EAAA,QAEDN,WAAW;AAAA;AAAAoC,EAAA,GAFhB9B,MAAM;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}